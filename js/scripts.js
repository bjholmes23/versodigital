!function(e){"use strict";function i(){var i=e(window).height();e(".fullscreen").children(".container").each(function(t){var a=e(this).innerHeight()+270;a>=i?e(this).parent(".fullscreen").addClass("not-overflow"):e(this).parent(".fullscreen").removeClass("not-overflow")})}e(document).ready(function(){s(e(this)),n(),t(e),r(),l(e(this)),d(e(this)),h(e(this)),u(e(this)),m(e(this)),v(e(this)),o(e(this)),c(e(this))}),jQuery(window).load(function(){f(e(this)),s(e(this)),n(),p(e(this)),w(e(this)),m(e(this)),e(".section").each(function(){a(e(this))})}),jQuery(window).resize(function(){p(e(this))});var t=function(i){e(".hero-slider").flexslider({animation:"fade",direction:"horizontal",animationSpeed:1e3,animationLoop:!0,smoothHeight:!1,directionNav:!1,controlsContainer:".hero-controls",controlNav:!0,slideshow:!0,useCSS:!0,after:function(i){e("li.flex-active-slide").hasClass("dark-slider")?e(".header").addClass("white-header"):e(".header").removeClass("white-header"),e("li.flex-active-slide").hasClass("white-slider")?e(".header").addClass("black-header"):e(".header").removeClass("black-header")},start:function(i){e("li.flex-active-slide").hasClass("dark-slider")?e(".header").addClass("inverse-header"):e(".header").removeClass("inverse-header"),e("li.flex-active-slide").hasClass("white-slider")?e(".header").addClass("black-header"):e(".header").removeClass("black-header")}}),e(".flex-prev, .flex-next").on("click",function(){var i=e(this).attr("href");return e(".hero-slider").flexslider(i),!1}),e(".flexslider").flexslider({animation:"fade",controlNav:!0,useCSS:!0,directionNav:!1})},a=function(e){e.find(".animate").each(function(e){var i=jQuery(this),t=i.data("animate");i.waypoint(function(a){i.css({"-webkit-animation-delay":.1*e+"s","-moz-animation-delay":.1*e+"s","-ms-animation-delay":.1*e+"s","-o-animation-delay":.1*e+"s","animation-delay":.1*e+"s"}),i.removeClass("animate").addClass("animated "+t).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",function(){jQuery(this).removeClass(t+" animated")})},{offset:"80%",triggerOnce:!0})})},n=function(i){e.stellar({horizontalScrolling:!1,responsive:!0})},o=function(i){e(".video-background").each(function(){e(this).YTPlayer({videoURL:e(this).data("video-id"),containment:"self",showControls:!1,autoPlay:!0,loop:!0,mute:!0,startAt:0,opacity:1,addRaster:!0,quality:"default"})})},s=function(t){t.find(".fullscreen").each(function(){var t=e(this),a=function(){t.height(e(window).height()),i()};a(),e(window).resize(function(){a()})})},r=function(i){var t=function(){e(window).width()>991?e(".auto-height").each(function(){var i=e(this),t=(i.height(),i.parent().parent().height());i.css("height",t)}):e(".auto-height").each(function(){var i=e(this);i.css("height","auto")})};t(),e(window).resize(function(){t()})},l=function(i){i.find(".progress-bar").each(function(){var i=e(this);i.waypoint(function(e){i.css("width",i.attr("aria-valuenow")+"%")},{offset:"80%",triggerOnce:!0})})},d=function(i){e(".menu-toggle").on("click",function(){e(this).closest("header").toggleClass("menu-open"),e(this).closest("header").hasClass("menu-3")&&e(this).toggleClass("active")});var t=function(){e(window).width()<991?e(".menu").addClass("mobile-menu"):e(".menu").removeClass("mobile-menu")};t(),e(window).resize(function(){t()})},c=function(i){var t=e(".mobile-menu");t.find("li.dropdown").hover(function(){var i=e(this);i.find(">.dropdown-menu").slideDown()},function(){e(this).find(">.dropdown-menu").slideUp()})},h=function(i){e(".owl-carousel").each(function(){var i=e(this);i.owlCarousel({loop:!0,margin:0,responsiveClass:!0,responsive:{0:{items:1,nav:!0},768:{items:i.data("col-sm"),nav:!1},992:{items:i.data("col-md"),nav:!0,loop:!1},1200:{items:i.data("col-lg"),nav:!0,loop:!1}}})})},u=function(e){jQuery(function(){var e=jQuery(".section"),i=jQuery(".menu a");e.waypoint({handler:function(e){var t;t=jQuery(this),"up"===e&&(t=t.prev());var a=jQuery('.menu a[href="#'+t.attr("id")+'"]');i.removeClass("active"),a.addClass("active"),t.addClass("active-section")},offset:"35%"})}),jQuery(".menu").localScroll({offset:-60,duration:500})},f=function(i){e(".loader").css("opacity",0),setTimeout(function(){e(".loader").hide(),e("body").addClass("loaded")},600)},v=function(i){e('[data-toggle="tooltip"]').tooltip();var t;e(".nav-tabs > li > a").on("click",function(){e(this).parent("li").hasClass("active")||(t=e(".tab-content > .tab-pane").filter(e(this).attr("href")).height(),e(".tab-content").animate({height:t},function(){e(".tab-content").css("height","auto")}))});var a=e(".accordion > dd").hide();a.first().slideDown("easeOutExpo"),e(".accordion > dt > a").first().addClass("active"),e(".accordion > dt > a").on("click",function(){var i=e(this).parent().next("dd");return e(".accordion > dt > a").removeClass("active"),e(this).addClass("active"),a.not(i).slideUp("easeInExpo"),e(this).parent().next().slideDown("easeOutExpo"),!1});e(".toggle > dd").hide();e(".toggle > dt > a").on("click",function(){if(e(this).hasClass("active"))e(this).parent().next().slideUp("easeOutExpo"),e(this).removeClass("active");else{e(this).parent().next("dd");e(this).addClass("active"),e(this).parent().next().slideDown("easeOutExpo")}return!1})},m=function(i){e("<div class='blank-space'></div>").insertAfter("#header"),e(window).scroll(function(){window.scrollY>0&&!e(".mobile-toggle").is(":visible")?e("#header").addClass("sticky"):e("#header").removeClass("sticky")})},p=function(i){var t=e(".isotope-container");t.isotope({itemSelector:".isotope-item",layoutMode:"masonry",filter:"*",animationOptions:{duration:750,easing:"linear",queue:!1}}),e("ul.portfolio-filter a").on("click",function(){var i=e(this).attr("data-filter");return t.isotope({filter:i,animationOptions:{duration:750,easing:"linear",queue:!1}}),!1});var a=e("ul.portfolio-filter"),n=a.find("a");n.on("click",function(){var i=e(this);if(i.hasClass("selected"))return!1;var t=i.parents("ul.portfolio-filter");t.find(".selected").removeClass("selected"),i.addClass("selected")})},w=function(i){var t=e(".isotope-fit-rows");t.isotope({layoutMode:"fitRows",itemSelector:".isotope-item"})}}(jQuery);
//# sourceMappingURL=data:application/json;base64,
